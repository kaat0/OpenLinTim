# -----------------------------------------------------------------------------
# =============================================================================
# === PLEASE DO NOT EDIT THIS FILE !!! ========================================
# =============================================================================
# -----------------------------------------------------------------------------
# --- Only edit this file if you are part of the LinTim-team and know       ---
# --- what you are doing! For custom dataset commands, please see the       ---
# --- Makefile in the corresponding dataset folder.                         ---
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# === CONVENTIONS =============================================================
# -----------------------------------------------------------------------------
# --- 1. All targets are supposed to be phony, that means no target will    ---
# ---    ever create a file with its name.                                  ---
# --- 2. It is formally impossible to map all dependencies properly,        ---
# ---    because some are circular and targets depend on _different_ files, ---
# ---    depending on the configuration, so they are not mapped at all.                                 ---
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# === CONSTANTS ===============================================================
# -----------------------------------------------------------------------------
SRC_DIR=../../src
FILENAME_CONFIG=basis/Config.cnf
ROOT_DIR=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
CORE_DIR=${SRC_DIR}/core

# =============================================================================
# =============================================================================
# === STEP SPECIFIC TARGETS ===================================================
# =============================================================================
# =============================================================================
# ----------------------------------- (scroll down for Inter Step Targets ) ---

# -----------------------------------------------------------------------------
# === Stop Location ===========================================================
# -----------------------------------------------------------------------------

sl-stop-location:
	bash ../../src/stop-location/stop-location.sh ${FILENAME_CONFIG}

sl-evaluate:
	bash ../../src/stop-location/stop-location-evaluation.sh ${FILENAME_CONFIG} false

# -----------------------------------------------------------------------------
# === Public Transportation Network ===========================================
# -----------------------------------------------------------------------------
ptn-draw:
	bash ../../src/tools/ptn-draw/ptn-draw.sh ${FILENAME_CONFIG}

ptn-evaluate:
	bash ../../src/stop-location/stop-location-evaluation.sh ${FILENAME_CONFIG} true

ptn-directify:
	rsync -r --delete --exclude .svn "`pwd`"/* "`pwd`".directed
	make -C "`pwd`".directed _directify-ptn
	@echo
	@echo Directification finished! The directified network can be found in
	@echo
	@echo "`pwd`".directed
	@echo

ptn-headways:
	bash ${SRC_DIR}/tools/create_headways/create_headways.sh ${FILENAME_CONFIG}

ptn-regenerate-load:
	bash ${SRC_DIR}/tools/ptn-load-generator/ptn-load-generators.sh ${FILENAME_CONFIG}
	
ptn-preprocess-walking:
	bash ${SRC_DIR}/tools/walking-preprocessor/run.sh ${FILENAME_CONFIG}

# only to be called through drectify-ptn; will modify the ptn without warning
_directify-ptn:
	bash ../../src/essentials/javatools/runner.sh ${FILENAME_CONFIG} LineConceptDirectification
# -----------------------------------------------------------------------------
# === Origin Destination Matrix ===============================================
# -----------------------------------------------------------------------------
od-create:
	bash ../../src/essentials/create-od/create-od.sh ${FILENAME_CONFIG}

od-evaluate:
	bash ../../src/essentials/javatools/runner.sh ${FILENAME_CONFIG} OriginDestinationMatrixEvaluation

od-fill-od:
	bash ../../src/essentials/fill-od/fill-od.sh ${FILENAME_CONFIG}

od-distribute-from-nodes:
	bash ../../src/essentials/create-od/from-nodes/run.sh ${FILENAME_CONFIG}

# -----------------------------------------------------------------------------
# === Line Pool ===============================================================
# -----------------------------------------------------------------------------

lpool-line-pool:
	bash ../../src/linepool/linepool.sh ${FILENAME_CONFIG}

lpool-line-pool-draw:
	bash ../../src/linepool/draw-linepool.sh ${FILENAME_CONFIG}
	neato -n -Tpng graphics/pool-graph.dot -o graphics/pool-graph.png
	neato -n -Tps graphics/pool-graph.dot -o graphics/pool-graph.ps

lpool-line-pool-cost:
	bash ../../src/linepool/write-cost-file.sh ${FILENAME_CONFIG}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

lpool-line-pool-evaluate:
	bash ../../src/essentials/javatools/runner.sh ${FILENAME_CONFIG} LinePoolEvaluation

# -----------------------------------------------------------------------------
# === Line Concept ============================================================
# -----------------------------------------------------------------------------

lc-line-concept:
	${SRC_DIR}/line-planning/line-planning.sh ${FILENAME_CONFIG}

lc-line-concept-draw:
	bash ../../src/linepool/draw-linepool.sh ${FILENAME_CONFIG} true
	neato -n -Tpng graphics/Line-graph.dot -o graphics/Line-graph.png
	neato -n -Tps graphics/Line-graph.dot -o graphics/Line-graph.ps

lc-line-concept-evaluate:
	make -C ${SRC_DIR}/line-planning/evaluation
	${SRC_DIR}/line-planning/evaluation/evaluation
	bash ../../src/essentials/javatools/runner.sh ${FILENAME_CONFIG} LineConceptEvaluation

# -----------------------------------------------------------------------------
# === Event Activity Network ==================================================
# -----------------------------------------------------------------------------
ean:
	echo "use_buffered_activities; false" >> basis/After-Config.cnf
	bash ../../src/essentials/javatools/runner.sh ${FILENAME_CONFIG} ptn2ean

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ean-reroute-passengers:
	bash ${SRC_DIR}/timetabling/periodic/reroute-passengers.sh ${FILENAME_CONFIG}

ean-buffer-activities:
	echo "use_buffered_activities; false" >> basis/After-Config.cnf
	bash ../../src/tools/robust-activities/runner.sh ${FILENAME_CONFIG} BufferActivities
	echo "use_buffered_activities; true" >> basis/After-Config.cnf

ean-evaluate:
	bash ../../src/tools/evaluate-ean/evaluate-ean.sh ${FILENAME_CONFIG}

ean-add-simple-vs:
	bash ${SRC_DIR}/vehicle-scheduling/add-simple-vehicle-routes-to-ean/add-simple-vehicle-routes-to-ean.sh

# -----------------------------------------------------------------------------
# === Periodic Timetable ======================================================
# -----------------------------------------------------------------------------

tim-timetable:
	${SRC_DIR}/timetabling/timetabling.sh ${FILENAME_CONFIG}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

tim-timetable-draw:
	bash ${SRC_DIR}/tools/plot/ean/periodic-ean-draw.sh ${FILENAME_CONFIG}

tim-timetable-evaluate:
	${SRC_DIR}/timetabling/timetable-evaluation.sh ${FILENAME_CONFIG}

tim-line-rearrange:
	cd ${SRC_DIR}/tools/line_rearrange/build && cmake ..
	make -C ${SRC_DIR}/tools/line_rearrange/build
	${SRC_DIR}/tools/line_rearrange/build/line_rearrange


tim-line-rearrange-tests:
	cd ${SRC_DIR}/tools/line_rearrange/build && cmake ..
	make -C ${SRC_DIR}/tools/line_rearrange/build
	${SRC_DIR}/tools/line_rearrange/build/tests/runTests

# -----------------------------------------------------------------------------
# === Rollout =================================================================
# -----------------------------------------------------------------------------
ro-rollout:
	bash ${SRC_DIR}/essentials/roll-out/Rollout.sh
	cat delay-management/Events-expanded.giv | awk -F ';' '{print $$1 "; " $$4}' > delay-management/Timetable-expanded.tim

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ro-trips:
	bash ${SRC_DIR}/essentials/trips/trips.sh

ro-trips-evaluate:
	bash ${SRC_DIR}/vehicle-scheduling/evaluation/evaluate_trips.sh

# -----------------------------------------------------------------------------
# === Delay Management ========================================================
# -----------------------------------------------------------------------------

dm-disposition-timetable:
	../../src/delay-management/disposition-timetable.sh ${FILENAME_CONFIG}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

dm-delays:
	${SRC_DIR}/delay-management/delays-generator.sh ${FILENAME_CONFIG}

dm-disposition-timetable-draw:
	bash ${SRC_DIR}/tools/plot/ean/aperiodic-ean-draw.sh ${FILENAME_CONFIG}

dm-disposition-timetable-animation:
	bash ${SRC_DIR}/delay-management/evaluation/timetable_draw.sh

dm-disposition-timetable-evaluate:
	bash ${SRC_DIR}/delay-management/evaluation/evaluate.sh

dm-disposition-timetable-batch-evaluate:
	${SRC_DIR}/tools/delay-batch-eval/batch-eval.sh

dm-robustness-check:
	bash ${SRC_DIR}/timetabling/aperiodic/robustness-evaluation/run_execute.sh

# -----------------------------------------------------------------------------
# === Vehicle Scheduling ======================================================
# -----------------------------------------------------------------------------

vs-vehicle-schedules:
	../../src/vehicle-scheduling/vehicle-scheduling.sh ${FILENAME_CONFIG}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

vs-add-circulations-to-ean:
	bash ${SRC_DIR}/essentials/circulations-to-ean/add_circulations.sh

vs-vehicle-schedules-evaluate:
	bash ${SRC_DIR}/vehicle-scheduling/evaluation/evaluate_vs.sh


# -----------------------------------------------------------------------------
# === Integrated Models =======================================================
# -----------------------------------------------------------------------------
int-lin-tim-pass:
	bash ${SRC_DIR}/integrated_models/lin_tim_pass/run.sh ${FILENAME_CONFIG}
int-lin-tim-pass-veh:
	bash ${SRC_DIR}/integrated_models/lin_tim_pass_veh/run.sh ${FILENAME_CONFIG}
int-tim-pass:
	bash ${SRC_DIR}/integrated_models/tim_pass/run.sh ${FILENAME_CONFIG}
int-tim-veh:
	bash ${SRC_DIR}/integrated_models/tim_veh/run.sh ${FILENAME_CONFIG}

# -----------------------------------------------------------------------------
# === Eigenmodel ==============================================================
# -----------------------------------------------------------------------------

em-lin-veh-to-tim:
	bash ${SRC_DIR}/integrated_models/eigenmodel/lin_veh_to_tim/run.sh ${FILENAME_CONFIG}


# -----------------------------------------------------------------------------
# === VISUM Transformation ====================================================
# -----------------------------------------------------------------------------

config-fill-config-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_config/read_config.sh ${FILENAME_CONFIG}

ptn-read-infrastructure-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_infrastructure/read_infrastructure.sh ${FILENAME_CONFIG}

ptn-read-restricted-turns-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_restricted_turns/read_restricted_turns.sh ${FILENAME_CONFIG}

ptn-read-ptn-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_ptn/read_ptn.sh ${FILENAME_CONFIG}

ptn-find-terminals-and-change-stations-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_system_routes/find_terminals_and_change_stations.sh ${FILENAME_CONFIG}

ptn-read-system-routes-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_system_routes/read_system_routes.sh ${FILENAME_CONFIG}

od-read-stop-od-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_demand/read_stop_demand.sh ${FILENAME_CONFIG}

od-read-node-od-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_demand/read_node_demand.sh ${FILENAME_CONFIG}

lc-read-stops-and-lines-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_lines_and_stops/read_lines_and_stops.sh ${FILENAME_CONFIG}

lc-read-fixed-lines-from-visum:
	bash ../../src/tools/visum-transformer/fixed_lines/read_fixed_lines.sh ${FILENAME_CONFIG}

tim-read-fixed-times-from-visum:
	bash ../../src/tools/visum-transformer/fixed_times/read_fixed_times.sh ${FILENAME_CONFIG}

tim-read-timetable-from-visum:
	bash ${SRC_DIR}/tools/visum-transformer/read_timetable/read_timetable.sh ${FILENAME_CONFIG}


tim-transform-to-visum:
	bash ${SRC_DIR}/tools/transform-timetable-to-visum/run.sh ${FILENAME_CONFIG}


# =============================================================================
# =============================================================================
# === INTER STEP TARGETS ======================================================
# =============================================================================
# =============================================================================
# ---------------------------------- (scroll up for Step Specific Targets ) ---

# -----------------------------------------------------------------------------
# === Controls ================================================================
# -----------------------------------------------------------------------------
terminate-solver:
	touch terminate-solver

kill-solver:
	touch kill-solver
# -----------------------------------------------------------------------------
# === Tools ===================================================================
# -----------------------------------------------------------------------------
clone:
	rsync -r --delete --exclude .svn "`pwd`"/* "`pwd`".clone

.PHONY: gtfs
gtfs:
	bash ${SRC_DIR}/tools/gtfs-exporter/run.sh ${FILENAME_CONFIG}

# -----------------------------------------------------------------------------
# === GUI =====================================================================
# -----------------------------------------------------------------------------
gui:
	cd ../../src/tools/gui/ && bash compile.sh
	cd ../../src/tools/gui/ && bash run.sh

mapgui:
	bash ${SRC_DIR}/tools/mapgui/run_mapgui.sh

# -----------------------------------------------------------------------------
# === Bureaucracy =============================================================
# -----------------------------------------------------------------------------

clean:
	rm -f *.log
	make -C line-planning clean
	make -C timetabling clean
	make -C graphics clean
	make -C delay-management clean
	make -C vehicle-scheduling clean

all-clean:
	make clean
	make clean-src

clean-src:
	${SRC_DIR}/clean.py
